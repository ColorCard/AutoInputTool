name: Build Python Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # 手动触发工作流

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest]  # 在 Windows 和 macOS 系统中进行打包

    steps:
      # Checkout 代码
      - name: Checkout code
        uses: actions/checkout@v2

      # 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      # 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 打包应用
      - name: Build executable
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            pip install pyinstaller
            pyinstaller --onefile --hidden-import pyautogui --noconsole auto_input_tool.py
          else
            pip install pyinstaller
            pyinstaller --onefile --hidden-import pyautogui --noconsole auto_input_tool.py
          fi

      # 列出生成的文件
      - name: List generated files
        run: ls dist

      # 上传生成的可执行文件
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: |
            dist/*